#pragma once
#ifndef X80PRO_H
#define X80PRO_H

static short getSensorSonar(const int *standardSensorData, short channel);
static short getSensorIRRange(const int *standardSensorData, const int *customSensorData, short channel);
static short getSensorHumanAlarm(const int *standardSensorData, short channel);
static short getSensorHumanMotion(Buffer *buf, const int *standardSensorData, short channel);
static short getSensorTiltingX(const int *standardSensorData);
static short getSensorTiltingY(const int *standardSensorData);
static short getSensorOverheat(const int *standardSensorData, short channel);
static short getSensorTemperature(const int *standardSensorData);
static short getSensorIRCode(const int *standardSensorData, short index);

static short getSensorBatteryAD(const int *standardSensorData, short channel);
static short getSensorRefVoltage(const int *standardSensorData);
static short getSensorPotVoltage(const int *standardSensorData);
static short getSensorPot(const int *motorSensorData, short channel);
static short getMotorCurrent(const int *motorSensorData, short channel);
static short getEncoderDirection(const int *motorSensorData, short channel);
static short getEncoderPulse(const int *motorSensorData, short channel);
static short getEncoderSpeed(const int *motorSensorData, short channel);
static short getCustomAD(const int *customSensorData, short channel);
static short getCustomDIn(const int *customSensorData, unsigned char channel);

typedef struct
{
    short (*getSensorSonar)(Buffer *, const int *, short);
    short (*getSensorIRRange)(Buffer *, const int *, const int *, short);
    short (*getSensorHumanAlarm)(Buffer *, const int *, short);
    short (*getSensorHumanMotion)(Buffer *, const int *, short);
    short (*getSensorTiltingX)(Buffer *, const int *);
    short (*getSensorTiltingY)(Buffer *, const int *);
    short (*getSensorOverheat)(Buffer *, const int *, short);
    short (*getSensorTemperature)(Buffer *, const int *);
    short (*getSensorIRCode)(Buffer *, const int *, short);
    short (*getSensorBatteryAD)(Buffer *, const int *, short);
    short (*getSensorRefVoltage)(Buffer *, const int *);
    short (*getSensorPotVoltage)(Buffer *, const int *);
    short (*getSensorPot)(Buffer *, const int *, short);
    short (*getMotorCurrent)(Buffer *, const int *, short);
    short (*getEncoderDirection)(Buffer *, const int *, short);
    short (*getEncoderPulse)(Buffer *, const int *, short);
    short (*getEncoderSpeed)(Buffer *, const int *, short);
    short (*getCustomAD)(Buffer *, const int *, short);
    short (*getCustomDIn)(Buffer *, const int *, unsigned char);

} X80ProRobot;

#endif
